# API Gateway - api.4thitek.vn
server {
    listen 80;
    server_name api.4thitek.vn;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name api.4thitek.vn;

    # SSL certificates
    ssl_certificate /etc/nginx/ssl/4thitek.vn/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/4thitek.vn/privkey.pem;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "DENY" always;

    # CORS headers - Dynamic origin matching
    set $cors_origin "";
    if ($http_origin ~* "^https://(www\.)?4thitek\.vn$") {
        set $cors_origin $http_origin;
    }
    if ($http_origin ~* "^https://admin\.4thitek\.vn$") {
        set $cors_origin $http_origin;
    }
    if ($http_origin ~* "^https://dealer\.4thitek\.vn$") {
        set $cors_origin $http_origin;
    }

    add_header Access-Control-Allow-Origin $cors_origin always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, X-Requested-With" always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header Access-Control-Max-Age "3600" always;

    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin $cors_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;
        add_header Access-Control-Max-Age "3600" always;
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 204;
    }

    # Rate limiting for API
    limit_req zone=api burst=30 nodelay;
    limit_conn addr 20;

    # API routes
    location /api/ {
        proxy_pass http://api-gateway:8080/api/;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Timeouts
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 300s;

        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # Auth endpoints - stricter rate limiting
    location /api/auth/ {
        limit_req zone=auth burst=5 nodelay;

        proxy_pass http://api-gateway:8080/api/auth/;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }

    # Swagger UI (disable in production if not needed)
    location /swagger-ui/ {
        # Optionally restrict to specific IPs
        # allow 123.456.789.0/24;
        # deny all;

        proxy_pass http://api-gateway:8080/swagger-ui/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /v3/api-docs/ {
        proxy_pass http://api-gateway:8080/v3/api-docs/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check
    location /health {
        access_log off;
        return 200 "OK";
        add_header Content-Type text/plain;
    }

    # Actuator endpoints - restrict access
    location /actuator/ {
        # Only allow from internal network or specific IPs
        allow 172.16.0.0/12;  # Docker network
        deny all;

        proxy_pass http://api-gateway:8080/actuator/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }
}
