import { useState, useEffect } from 'react'
import './QRPayment.css'

const QRPayment = ({ orderData, onPaymentComplete }) => {
  const [countdown, setCountdown] = useState(300) // 5 minutes countdown
  const [qrCode, setQrCode] = useState('')

  useEffect(() => {
    // Generate QR code data (in real app, this would be from payment gateway)
    const paymentData = {
      amount: orderData.totalAmount,
      orderId: `TZ${Date.now()}`,
      merchantId: 'TUNEZONE_DEALER',
      description: `Thanh to√°n ƒë∆°n h√†ng ${orderData.cart.length} s·∫£n ph·∫©m`
    }
    
    // Simulate QR code generation
    const qrData = `https://qr.tunezone.vn/pay?amount=${paymentData.amount}&orderId=${paymentData.orderId}&merchantId=${paymentData.merchantId}`
    setQrCode(qrData)
  }, [orderData])

  useEffect(() => {
    const timer = setInterval(() => {
      setCountdown(prev => {
        if (prev <= 1) {
          clearInterval(timer)
          return 0
        }
        return prev - 1
      })
    }, 1000)

    return () => clearInterval(timer)
  }, [])

  const formatPrice = (price) => {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND'
    }).format(price)
  }

  const formatTime = (seconds) => {
    const minutes = Math.floor(seconds / 60)
    const remainingSeconds = seconds % 60
    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`
  }

  const generateQRCodeImage = (data) => {
    // In a real application, you would use a QR code library like qrcode
    // For demo purposes, we'll use a placeholder
    return `https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${encodeURIComponent(data)}`
  }

  return (
    <div className="qr-payment-page">
      <div className="qr-payment-container">
        <div className="payment-header">
          <h2>Thanh to√°n QR Code</h2>
          <div className="payment-status">
            <span className="status-indicator pending"></span>
            <span>ƒêang ch·ªù thanh to√°n</span>
          </div>
        </div>

        <div className="payment-content">
          <div className="qr-section">
            <div className="qr-code-container">
              {qrCode && (
                <img 
                  src={generateQRCodeImage(qrCode)} 
                  alt="QR Code thanh to√°n"
                  className="qr-code-image"
                />
              )}
              <div className="qr-overlay">
                <div className="scanning-line"></div>
              </div>
            </div>
            
            <div className="qr-instructions">
              <h3>H∆∞·ªõng d·∫´n thanh to√°n</h3>
              <ol>
                <li>M·ªü ·ª©ng d·ª•ng ng√¢n h√†ng ho·∫∑c v√≠ ƒëi·ªán t·ª≠</li>
                <li>Ch·ªçn t√≠nh nƒÉng qu√©t m√£ QR</li>
                <li>Qu√©t m√£ QR ph√≠a tr√™n</li>
                <li>X√°c nh·∫≠n th√¥ng tin v√† ho√†n t·∫•t thanh to√°n</li>
              </ol>
            </div>

            <div className="payment-timer">
              <div className="timer-icon">‚è∞</div>
              <div className="timer-content">
                <span>Th·ªùi gian c√≤n l·∫°i:</span>
                <span className={`timer-display ${countdown <= 60 ? 'warning' : ''}`}>
                  {formatTime(countdown)}
                </span>
              </div>
            </div>

            {countdown === 0 && (
              <div className="timeout-message">
                <p>M√£ QR ƒë√£ h·∫øt h·∫°n. Vui l√≤ng th·ª≠ l·∫°i.</p>
                <button 
                  className="btn btn-secondary"
                  onClick={() => window.location.reload()}
                >
                  T·∫°o m√£ QR m·ªõi
                </button>
              </div>
            )}
          </div>

          <div className="payment-details">
            <div className="details-card">
              <h3>Th√¥ng tin thanh to√°n</h3>
              
              <div className="payment-info">
                <div className="info-row">
                  <span>S·ªë ti·ªÅn:</span>
                  <span className="amount">{formatPrice(orderData.totalAmount)}</span>
                </div>
                <div className="info-row">
                  <span>M√£ ƒë∆°n h√†ng:</span>
                  <span>TZ{Date.now()}</span>
                </div>
                <div className="info-row">
                  <span>Kh√°ch h√†ng:</span>
                  <span>{orderData.customerInfo.name}</span>
                </div>
                <div className="info-row">
                  <span>S·ªë ƒëi·ªán tho·∫°i:</span>
                  <span>{orderData.customerInfo.phone}</span>
                </div>
              </div>

              <div className="order-summary">
                <h4>S·∫£n ph·∫©m ƒë√£ ƒë·∫∑t</h4>
                <div className="order-items">
                  {orderData.cart.map(item => (
                    <div key={item.id} className="order-item">
                      <div className="item-image">
                        <img src={item.image} alt={item.name} />
                      </div>
                      <div className="item-info">
                        <span className="item-name">{item.name}</span>
                        <span className="item-quantity">x{item.quantity}</span>
                        <span className="item-price">
                          {formatPrice(item.price * item.quantity)}
                        </span>
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              <div className="payment-methods">
                <h4>·ª®ng d·ª•ng h·ªó tr·ª£</h4>
                <div className="supported-apps">
                  <div className="app-icon">üèß</div>
                  <div className="app-icon">üí≥</div>
                  <div className="app-icon">üì±</div>
                  <div className="app-icon">üè¶</div>
                </div>
                <p>Vietcombank, BIDV, VietinBank, Techcombank, MBBank, VPBank, MoMo, ZaloPay...</p>
              </div>
            </div>
          </div>
        </div>

        <div className="payment-actions">
          <button 
            className="btn btn-success"
            onClick={onPaymentComplete}
          >
            ‚úÖ ƒê√£ thanh to√°n xong
          </button>
          <button 
            className="btn btn-secondary"
            onClick={() => window.history.back()}
          >
            ‚Üê Quay l·∫°i
          </button>
        </div>

        <div className="payment-note">
          <p>
            üí° <strong>L∆∞u √Ω:</strong> Sau khi thanh to√°n th√†nh c√¥ng, vui l√≤ng nh·∫•n n√∫t "ƒê√£ thanh to√°n xong" 
            ƒë·ªÉ ho√†n t·∫•t ƒë∆°n h√†ng. Ch√∫ng t√¥i s·∫Ω x√°c nh·∫≠n v√† x·ª≠ l√Ω ƒë∆°n h√†ng c·ªßa b·∫°n trong v√≤ng 15 ph√∫t.
          </p>
        </div>
      </div>
    </div>
  )
}

export default QRPayment