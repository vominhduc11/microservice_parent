'use client';

import { useState, useEffect, useMemo, Suspense } from 'react';
import { useSearchParams } from 'next/navigation';
import Link from 'next/link';
import Image from 'next/image';
import { FiSearch, FiFilter, FiX, FiArrowLeft } from 'react-icons/fi';
import { motion, AnimatePresence } from 'framer-motion';
import { apiService } from '@/services/apiService';
import { useLanguage } from '@/context/LanguageContext';
import Hero from '@/components/ui/Hero';

interface SearchResult {
    type: 'product' | 'blog';
    id: string;
    title: string;
    subtitle?: string;
    image?: string;
    href: string;
    category?: string;
}

// Helper function to parse image JSON string
const parseImageUrl = (imageString: string): string => {
    try {
        const imageData = JSON.parse(imageString);
        return imageData.imageUrl || '';
    } catch {
        return '';
    }
};

// Animation variants
const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
        opacity: 1,
        transition: {
            staggerChildren: 0.1,
            delayChildren: 0.2
        }
    }
};

const itemVariants = {
    hidden: { y: 20, opacity: 0 },
    visible: {
        y: 0,
        opacity: 1,
        transition: {
            duration: 0.5,
            ease: "easeOut"
        }
    }
};

const cardVariants = {
    hidden: { y: 20, opacity: 0, scale: 0.95 },
    visible: {
        y: 0,
        opacity: 1,
        scale: 1,
        transition: {
            duration: 0.4,
            ease: "easeOut"
        }
    },
    hover: {
        y: -5,
        scale: 1.02,
        transition: {
            duration: 0.2,
            ease: "easeInOut"
        }
    }
};

const searchFormVariants = {
    hidden: { y: -20, opacity: 0 },
    visible: {
        y: 0,
        opacity: 1,
        transition: {
            duration: 0.6,
            ease: "easeOut"
        }
    }
};

const filterVariants = {
    hidden: { x: -20, opacity: 0 },
    visible: {
        x: 0,
        opacity: 1,
        transition: {
            duration: 0.5,
            ease: "easeOut"
        }
    }
};

function SearchContent() {
    const { t } = useLanguage();
    const searchParams = useSearchParams();
    const query = searchParams.get('q') || '';

    const [results, setResults] = useState<SearchResult[]>([]);
    const [isLoading, setIsLoading] = useState(false);
    const [activeFilter, setActiveFilter] = useState<'all' | 'products' | 'blogs'>('all');
    const [searchInput, setSearchInput] = useState(query);

    // Perform search when query changes
    useEffect(() => {
        if (!query.trim()) {
            setResults([]);
            return;
        }

        const performSearch = async () => {
            setIsLoading(true);
            try {
                const response = await apiService.search(query, 20);

                if (!response.success) {
                    console.error('Search failed:', response.error);
                    setResults([]);
                    return;
                }

                const searchResults: SearchResult[] = [];

                // Process products
                response.data.products.forEach((product: { id: number; name: string; shortDescription: string; image: string }) => {
                    searchResults.push({
                        type: 'product',
                        id: product.id?.toString() || `product-${Date.now()}`,
                        title: product.name,
                        subtitle: product.shortDescription,
                        image: parseImageUrl(product.image),
                        href: `/products/${product.id}`,
                        category: 'Sản phẩm'
                    });
                });

                // Process blogs
                response.data.blogs.forEach((blog: { id: number; title: string; description: string; image: string; category?: string }) => {
                    searchResults.push({
                        type: 'blog',
                        id: blog.id?.toString() || `blog-${Date.now()}`,
                        title: blog.title,
                        subtitle: blog.description,
                        image: parseImageUrl(blog.image),
                        href: `/blogs/${blog.id}`,
                        category: blog.category || 'Blog'
                    });
                });

                setResults(searchResults);
            } catch (error) {
                console.error('Search error:', error);
                setResults([]);
            } finally {
                setIsLoading(false);
            }
        };

        performSearch();
    }, [query]);

    // Update search input when query param changes
    useEffect(() => {
        setSearchInput(query);
    }, [query]);

    // Filter results based on active filter
    const filteredResults = useMemo(() => {
        return results.filter((result) => {
            if (activeFilter === 'all') return true;
            if (activeFilter === 'products') return result.type === 'product';
            if (activeFilter === 'blogs') return result.type === 'blog';
            return true;
        });
    }, [results, activeFilter]);

    // Handle new search
    const handleSearch = (e: React.FormEvent) => {
        e.preventDefault();
        if (searchInput.trim()) {
            window.location.href = `/search?q=${encodeURIComponent(searchInput.trim())}`;
        }
    };

    const breadcrumbItems = [
        { label: t('nav.home'), href: '/' },
        { label: 'Tìm kiếm', active: true }
    ];

    const productCount = results.filter(r => r.type === 'product').length;
    const blogCount = results.filter(r => r.type === 'blog').length;

    return (
        <div className="min-h-screen bg-[#0c131d] relative overflow-hidden">
            {/* Background Effects */}
            <div className="absolute inset-0 overflow-hidden pointer-events-none">
                {/* Gradient Orbs */}
                <div className="absolute top-20 -right-20 w-96 h-96 bg-[#4FC8FF]/5 rounded-full blur-3xl animate-pulse"></div>
                <div className="absolute bottom-20 -left-20 w-80 h-80 bg-blue-600/3 rounded-full blur-3xl animate-pulse" style={{animationDelay: '2s'}}></div>

                {/* Floating Particles */}
                <div className="absolute top-32 left-1/4 w-2 h-2 bg-[#4FC8FF]/30 rounded-full animate-bounce" style={{animationDelay: '1s'}}></div>
                <div className="absolute top-64 right-1/3 w-1 h-1 bg-blue-400/40 rounded-full animate-bounce" style={{animationDelay: '3s'}}></div>
                <div className="absolute bottom-64 left-1/3 w-1.5 h-1.5 bg-[#4FC8FF]/25 rounded-full animate-bounce" style={{animationDelay: '5s'}}></div>
            </div>

            {/* Hero Section */}
            <Hero breadcrumbItems={breadcrumbItems} />

            {/* Search Section */}
            <motion.section
                className="ml-16 sm:ml-20 py-4 sm:py-6 lg:py-8 px-4 sm:px-6 md:px-8 lg:px-12 xl:px-20 relative"
                initial="hidden"
                animate="visible"
                variants={containerVariants}
            >
                <div className="max-w-6xl mx-auto">
                    {/* Search Header */}
                    <motion.div
                        className="mb-6 lg:mb-8"
                        variants={itemVariants}
                    >
                        <motion.div
                            className="flex items-center gap-3 sm:gap-4 mb-4 sm:mb-6"
                            variants={itemVariants}
                        >
                            <motion.div
                                whileHover={{ scale: 1.1 }}
                                whileTap={{ scale: 0.95 }}
                            >
                                <Link
                                    href="/"
                                    className="p-2 hover:bg-gray-700/50 rounded-lg transition-all duration-300 flex-shrink-0 group"
                                    aria-label="Back to home"
                                >
                                    <FiArrowLeft className="w-4 h-4 sm:w-5 sm:h-5 text-gray-400 group-hover:text-[#4FC8FF] transition-colors" />
                                </Link>
                            </motion.div>
                            <motion.h1
                                className="text-xl sm:text-2xl md:text-3xl font-bold text-white truncate"
                                initial={{ x: -20, opacity: 0 }}
                                animate={{ x: 0, opacity: 1 }}
                                transition={{ duration: 0.6, delay: 0.3 }}
                            >
                                Kết quả tìm kiếm
                            </motion.h1>
                        </motion.div>

                        {/* Search Form */}
                        <motion.form
                            onSubmit={handleSearch}
                            className="mb-4 sm:mb-6"
                            variants={searchFormVariants}
                        >
                            <div className="relative max-w-full sm:max-w-2xl group">
                                <motion.div
                                    className="absolute left-3 sm:left-4 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4 sm:w-5 sm:h-5"
                                    animate={{
                                        color: searchInput ? '#4FC8FF' : '#9CA3AF',
                                        scale: searchInput ? 1.1 : 1
                                    }}
                                    transition={{ duration: 0.2 }}
                                >
                                    <FiSearch className="w-full h-full" />
                                </motion.div>
                                <input
                                    type="text"
                                    placeholder="Tìm kiếm sản phẩm, bài viết..."
                                    value={searchInput}
                                    onChange={(e) => setSearchInput(e.target.value)}
                                    className="w-full pl-10 sm:pl-12 pr-10 sm:pr-12 py-3 sm:py-4 text-sm sm:text-base bg-gray-800/50 border border-gray-600/50 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-[#4FC8FF] focus:bg-gray-800/70 focus:shadow-lg focus:shadow-[#4FC8FF]/10 transition-all duration-300 backdrop-blur-sm"
                                />
                                <AnimatePresence>
                                    {searchInput && (
                                        <motion.button
                                            type="button"
                                            onClick={() => setSearchInput('')}
                                            className="absolute right-3 sm:right-4 top-1/2 transform -translate-y-1/2 p-1 hover:bg-gray-600/50 rounded transition-colors"
                                            initial={{ opacity: 0, scale: 0.8 }}
                                            animate={{ opacity: 1, scale: 1 }}
                                            exit={{ opacity: 0, scale: 0.8 }}
                                            whileHover={{ scale: 1.1 }}
                                            whileTap={{ scale: 0.9 }}
                                        >
                                            <FiX className="w-3 h-3 sm:w-4 sm:h-4 text-gray-400 hover:text-red-400 transition-colors" />
                                        </motion.button>
                                    )}
                                </AnimatePresence>
                            </div>
                        </motion.form>

                        {/* Search Info */}
                        <AnimatePresence>
                            {query && (
                                <motion.div
                                    className="space-y-4"
                                    initial={{ opacity: 0, y: 20 }}
                                    animate={{ opacity: 1, y: 0 }}
                                    exit={{ opacity: 0, y: -20 }}
                                    transition={{ duration: 0.4 }}
                                >
                                    <motion.div variants={itemVariants}>
                                        <motion.p
                                            className="text-sm sm:text-base text-gray-300 mb-1"
                                            initial={{ opacity: 0 }}
                                            animate={{ opacity: 1 }}
                                            transition={{ delay: 0.2 }}
                                        >
                                            Tìm kiếm cho: <span className="text-white font-medium break-words bg-gradient-to-r from-[#4FC8FF] to-blue-400 bg-clip-text text-transparent">&ldquo;{query}&rdquo;</span>
                                        </motion.p>
                                        <motion.p
                                            className="text-xs sm:text-sm text-gray-400"
                                            initial={{ opacity: 0 }}
                                            animate={{ opacity: 1 }}
                                            transition={{ delay: 0.3 }}
                                        >
                                            Tìm thấy <span className="text-[#4FC8FF] font-medium">{filteredResults.length}</span> kết quả
                                        </motion.p>
                                    </motion.div>

                                    {/* Filter Tabs */}
                                    <motion.div
                                        className="flex flex-col sm:flex-row sm:items-center gap-3 sm:gap-4"
                                        variants={filterVariants}
                                    >
                                        <motion.div
                                            className="flex items-center gap-2 flex-shrink-0"
                                            initial={{ opacity: 0, x: -10 }}
                                            animate={{ opacity: 1, x: 0 }}
                                            transition={{ delay: 0.4 }}
                                        >
                                            <FiFilter className="w-4 h-4 text-[#4FC8FF]" />
                                            <span className="text-sm text-gray-400 hidden sm:block">Lọc:</span>
                                        </motion.div>
                                        <motion.div
                                            className="flex items-center gap-1 overflow-x-auto"
                                            initial={{ opacity: 0 }}
                                            animate={{ opacity: 1 }}
                                            transition={{ delay: 0.5, staggerChildren: 0.1 }}
                                        >
                                            {[
                                                { id: 'all', label: 'Tất cả', count: results.length },
                                                { id: 'products', label: 'Sản phẩm', count: productCount },
                                                { id: 'blogs', label: 'Bài viết', count: blogCount }
                                            ].map((tab, index) => (
                                                <motion.button
                                                    key={tab.id}
                                                    onClick={() => setActiveFilter(tab.id as 'all' | 'products' | 'blogs')}
                                                    className={`px-3 sm:px-4 py-2 rounded-lg text-xs sm:text-sm font-medium transition-all duration-300 whitespace-nowrap relative overflow-hidden ${
                                                        activeFilter === tab.id
                                                            ? 'bg-gradient-to-r from-[#4FC8FF] to-blue-500 text-white shadow-lg shadow-[#4FC8FF]/25'
                                                            : 'text-gray-400 hover:text-white hover:bg-gray-700/50 border border-gray-600/30 hover:border-[#4FC8FF]/30'
                                                    }`}
                                                    initial={{ opacity: 0, y: 20 }}
                                                    animate={{ opacity: 1, y: 0 }}
                                                    transition={{ delay: 0.6 + index * 0.1 }}
                                                    whileHover={{ scale: 1.05 }}
                                                    whileTap={{ scale: 0.95 }}
                                                >
                                                    {activeFilter === tab.id && (
                                                        <motion.div
                                                            className="absolute inset-0 bg-white/10"
                                                            layoutId="activeFilter"
                                                            initial={false}
                                                            transition={{ type: "spring", bounce: 0.2, duration: 0.6 }}
                                                        />
                                                    )}
                                                    <span className="relative z-10">
                                                        <span className="sm:hidden">{tab.label}</span>
                                                        <span className="hidden sm:inline">{tab.label} ({tab.count})</span>
                                                    </span>
                                                </motion.button>
                                            ))}
                                        </motion.div>
                                    </motion.div>
                                </motion.div>
                            )}
                        </AnimatePresence>
                    </motion.div>

                    {/* Results */}
                    <div className="min-h-[300px] sm:min-h-[400px]">
                        {isLoading ? (
                            /* Loading State - Enhanced Skeleton UI */
                            <motion.div
                                className="space-y-4 sm:space-y-6"
                                initial={{ opacity: 0 }}
                                animate={{ opacity: 1 }}
                                transition={{ duration: 0.3 }}
                            >
                                {/* Loading Header */}
                                <div className="flex items-center justify-center py-8 sm:py-12">
                                    <div className="text-center">
                                        <motion.div
                                            className="relative mx-auto mb-4"
                                            animate={{ rotate: 360 }}
                                            transition={{ duration: 2, repeat: Infinity, ease: "linear" }}
                                        >
                                            <div className="w-12 h-12 sm:w-16 sm:h-16 border-4 border-[#4FC8FF]/20 border-t-[#4FC8FF] rounded-full"></div>
                                            <div className="absolute inset-2 w-8 h-8 sm:w-12 sm:h-12 border-2 border-blue-400/30 border-b-blue-400 rounded-full animate-spin" style={{animationDirection: 'reverse', animationDuration: '1s'}}></div>
                                        </motion.div>
                                        <motion.p
                                            className="text-sm sm:text-base text-gray-400"
                                            animate={{ opacity: [0.5, 1, 0.5] }}
                                            transition={{ duration: 2, repeat: Infinity }}
                                        >
                                            Đang tìm kiếm...
                                        </motion.p>
                                    </div>
                                </div>

                                {/* Skeleton Cards */}
                                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6">
                                    {Array.from({ length: 6 }).map((_, index) => (
                                        <motion.div
                                            key={index}
                                            className="bg-gray-800/30 rounded-lg overflow-hidden backdrop-blur-sm"
                                            initial={{ opacity: 0, y: 20 }}
                                            animate={{ opacity: 1, y: 0 }}
                                            transition={{ duration: 0.3, delay: index * 0.1 }}
                                        >
                                            <div className="aspect-video bg-gradient-to-r from-gray-700/50 to-gray-600/50 animate-pulse"></div>
                                            <div className="p-4 space-y-3">
                                                <div className="h-4 bg-gradient-to-r from-gray-600/50 to-gray-500/50 rounded animate-pulse"></div>
                                                <div className="h-3 bg-gradient-to-r from-gray-700/50 to-gray-600/50 rounded w-3/4 animate-pulse"></div>
                                                <div className="h-3 bg-gradient-to-r from-gray-700/50 to-gray-600/50 rounded w-1/2 animate-pulse"></div>
                                            </div>
                                        </motion.div>
                                    ))}
                                </div>
                            </motion.div>
                        ) : !query ? (
                            /* No Query State - Enhanced */
                            <motion.div
                                className="text-center py-12 sm:py-16 px-4"
                                initial={{ opacity: 0, y: 20 }}
                                animate={{ opacity: 1, y: 0 }}
                                transition={{ duration: 0.6 }}
                            >
                                <motion.div
                                    className="w-16 h-16 sm:w-20 sm:h-20 mx-auto mb-6 sm:mb-8 bg-gradient-to-br from-[#4FC8FF]/20 to-blue-600/20 rounded-full flex items-center justify-center relative"
                                    animate={{
                                        scale: [1, 1.05, 1],
                                        boxShadow: [
                                            "0 0 0 0px rgba(79, 200, 255, 0.3)",
                                            "0 0 0 10px rgba(79, 200, 255, 0.1)",
                                            "0 0 0 0px rgba(79, 200, 255, 0)"
                                        ]
                                    }}
                                    transition={{ duration: 2, repeat: Infinity }}
                                >
                                    <FiSearch className="w-8 h-8 sm:w-10 sm:h-10 text-[#4FC8FF]" />
                                </motion.div>
                                <motion.h3
                                    className="text-xl sm:text-2xl font-bold text-white mb-3"
                                    initial={{ opacity: 0 }}
                                    animate={{ opacity: 1 }}
                                    transition={{ delay: 0.2 }}
                                >
                                    Khám phá nội dung
                                </motion.h3>
                                <motion.p
                                    className="text-sm sm:text-base text-gray-400 mb-6"
                                    initial={{ opacity: 0 }}
                                    animate={{ opacity: 1 }}
                                    transition={{ delay: 0.3 }}
                                >
                                    Tìm kiếm sản phẩm audio chất lượng cao và các bài viết hữu ích
                                </motion.p>

                                {/* Floating suggestions */}
                                <motion.div
                                    className="flex flex-wrap justify-center gap-2 sm:gap-3 max-w-md mx-auto"
                                    initial={{ opacity: 0 }}
                                    animate={{ opacity: 1 }}
                                    transition={{ delay: 0.4 }}
                                >
                                    {['Headphone', 'Speaker', 'Audio', 'Review'].map((suggestion, index) => (
                                        <motion.button
                                            key={suggestion}
                                            onClick={() => window.location.href = `/search?q=${encodeURIComponent(suggestion)}`}
                                            className="px-3 py-1.5 text-xs sm:text-sm bg-gray-700/30 hover:bg-[#4FC8FF]/20 text-gray-400 hover:text-[#4FC8FF] rounded-full transition-all duration-300 border border-gray-600/30 hover:border-[#4FC8FF]/50"
                                            initial={{ opacity: 0, y: 10 }}
                                            animate={{ opacity: 1, y: 0 }}
                                            transition={{ delay: 0.5 + index * 0.1 }}
                                            whileHover={{ scale: 1.05 }}
                                            whileTap={{ scale: 0.95 }}
                                        >
                                            {suggestion}
                                        </motion.button>
                                    ))}
                                </motion.div>
                            </motion.div>
                        ) : filteredResults.length > 0 ? (
                            /* Results Grid - Enhanced */
                            <motion.div
                                className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6"
                                variants={containerVariants}
                                initial="hidden"
                                animate="visible"
                            >
                                {filteredResults.map((result, index) => (
                                    <motion.div
                                        key={`${result.type}-${result.id}`}
                                        variants={cardVariants}
                                        whileHover="hover"
                                        className="group"
                                    >
                                        <Link
                                            href={result.href}
                                            className="block bg-gradient-to-br from-gray-800/40 to-gray-900/60 backdrop-blur-sm rounded-xl overflow-hidden transition-all duration-500 group border border-gray-700/50 hover:border-[#4FC8FF]/50 relative"
                                        >
                                            {/* Glow effect on hover */}
                                            <div className="absolute inset-0 bg-gradient-to-br from-[#4FC8FF]/5 to-blue-600/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>

                                            {/* Image */}
                                            <div className="aspect-video bg-gradient-to-br from-gray-700/30 to-gray-800/50 relative overflow-hidden">
                                                {result.image ? (
                                                    <Image
                                                        src={result.image}
                                                        alt={result.title}
                                                        fill
                                                        className="object-cover group-hover:scale-110 transition-transform duration-700 ease-out"
                                                    />
                                                ) : (
                                                    <div className="w-full h-full flex items-center justify-center bg-gradient-to-br from-gray-600/30 to-gray-700/30">
                                                        <FiSearch className="w-8 h-8 text-gray-400 group-hover:text-[#4FC8FF] transition-colors duration-300" />
                                                    </div>
                                                )}

                                                {/* Overlay gradient */}
                                                <div className="absolute inset-0 bg-gradient-to-t from-black/50 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>

                                                {/* Type Badge */}
                                                <motion.div
                                                    className="absolute top-3 left-3"
                                                    initial={{ scale: 0.8, opacity: 0.8 }}
                                                    whileHover={{ scale: 1, opacity: 1 }}
                                                    transition={{ duration: 0.2 }}
                                                >
                                                    <span
                                                        className={`text-xs px-3 py-1.5 rounded-full font-medium backdrop-blur-sm border transition-all duration-300 ${
                                                            result.type === 'product'
                                                                ? 'bg-blue-500/90 text-white border-blue-400/50 group-hover:bg-blue-400 group-hover:shadow-lg group-hover:shadow-blue-500/25'
                                                                : 'bg-green-500/90 text-white border-green-400/50 group-hover:bg-green-400 group-hover:shadow-lg group-hover:shadow-green-500/25'
                                                        }`}
                                                    >
                                                        {result.type === 'product' ? 'Sản phẩm' : 'Bài viết'}
                                                    </span>
                                                </motion.div>
                                            </div>

                                            {/* Content - Enhanced */}
                                            <div className="p-4 sm:p-5 relative">
                                                <motion.h3
                                                    className="text-sm sm:text-base text-white font-bold mb-2 group-hover:text-[#4FC8FF] transition-colors duration-300 line-clamp-2"
                                                    initial={{ opacity: 0.9 }}
                                                    whileHover={{ opacity: 1 }}
                                                >
                                                    {result.title}
                                                </motion.h3>
                                                {result.subtitle && (
                                                    <motion.p
                                                        className="text-xs sm:text-sm text-gray-400 line-clamp-2 sm:line-clamp-3 mb-3 group-hover:text-gray-300 transition-colors duration-300"
                                                        initial={{ opacity: 0.8 }}
                                                        whileHover={{ opacity: 1 }}
                                                    >
                                                        {result.subtitle}
                                                    </motion.p>
                                                )}
                                                {result.category && (
                                                    <motion.div
                                                        className="flex items-center gap-1"
                                                        initial={{ opacity: 0.7 }}
                                                        whileHover={{ opacity: 1 }}
                                                    >
                                                        <div className="w-1 h-1 bg-[#4FC8FF] rounded-full"></div>
                                                        <span className="text-xs text-[#4FC8FF] font-medium">
                                                            {result.category}
                                                        </span>
                                                    </motion.div>
                                                )}

                                                {/* Hover indicator */}
                                                <motion.div
                                                    className="absolute bottom-2 right-2 w-6 h-6 bg-[#4FC8FF]/20 rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300"
                                                    whileHover={{ scale: 1.1 }}
                                                >
                                                    <div className="w-2 h-2 bg-[#4FC8FF] rounded-full"></div>
                                                </motion.div>
                                            </div>
                                        </Link>
                                    </motion.div>
                                ))}
                            </motion.div>
                        ) : (
                            /* No Results - Enhanced */
                            <motion.div
                                className="text-center py-12 sm:py-16 px-4"
                                initial={{ opacity: 0, y: 20 }}
                                animate={{ opacity: 1, y: 0 }}
                                transition={{ duration: 0.6 }}
                            >
                                <motion.div
                                    className="w-16 h-16 sm:w-20 sm:h-20 mx-auto mb-6 sm:mb-8 bg-gradient-to-br from-gray-700/30 to-gray-800/30 rounded-full flex items-center justify-center relative"
                                    animate={{
                                        scale: [1, 1.05, 1],
                                    }}
                                    transition={{ duration: 2, repeat: Infinity }}
                                >
                                    <FiSearch className="w-8 h-8 sm:w-10 sm:h-10 text-gray-400" />
                                    <div className="absolute inset-0 rounded-full border border-gray-600/30"></div>
                                </motion.div>
                                <motion.h3
                                    className="text-xl sm:text-2xl font-bold text-white mb-3"
                                    initial={{ opacity: 0 }}
                                    animate={{ opacity: 1 }}
                                    transition={{ delay: 0.2 }}
                                >
                                    Không tìm thấy kết quả
                                </motion.h3>
                                <motion.p
                                    className="text-sm sm:text-base text-gray-400 mb-6 max-w-md mx-auto leading-relaxed"
                                    initial={{ opacity: 0 }}
                                    animate={{ opacity: 1 }}
                                    transition={{ delay: 0.3 }}
                                >
                                    Không có kết quả nào cho <span className="break-words text-[#4FC8FF] font-medium">&ldquo;{query}&rdquo;</span>.
                                    <br className="hidden sm:block" />
                                    Thử tìm kiếm với từ khóa khác hoặc các gợi ý bên dưới.
                                </motion.p>
                                <motion.div
                                    className="flex flex-wrap gap-2 justify-center max-w-lg mx-auto"
                                    initial={{ opacity: 0 }}
                                    animate={{ opacity: 1 }}
                                    transition={{ delay: 0.4 }}
                                >
                                    {['Audio', 'Headphone', 'Speaker', 'Microphone', 'Review', 'Gaming'].map((suggestion, index) => (
                                        <motion.div
                                            key={suggestion}
                                            initial={{ opacity: 0, y: 10 }}
                                            animate={{ opacity: 1, y: 0 }}
                                            transition={{ delay: 0.5 + index * 0.1 }}
                                        >
                                            <Link
                                                href={`/search?q=${encodeURIComponent(suggestion)}`}
                                                className="inline-block px-3 sm:px-4 py-1.5 sm:py-2 bg-gradient-to-r from-[#4FC8FF]/10 to-blue-600/10 hover:from-[#4FC8FF]/20 hover:to-blue-600/20 border border-[#4FC8FF]/30 hover:border-[#4FC8FF]/50 rounded-full text-xs sm:text-sm text-[#4FC8FF] hover:text-white transition-all duration-300 hover:shadow-lg hover:shadow-[#4FC8FF]/10 transform hover:scale-105"
                                            >
                                                {suggestion}
                                            </Link>
                                        </motion.div>
                                    ))}
                                </motion.div>
                            </div>
                        )}
                    </div>
                </div>
            </section>
        </div>
    );
}

export default function SearchPage() {
    return (
        <Suspense fallback={
            <div className="min-h-screen bg-[#0c131d] text-white flex items-center justify-center">
                <div className="text-center">
                    <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-[#4FC8FF] mx-auto mb-4"></div>
                    <p className="text-gray-400">Đang tải...</p>
                </div>
            </div>
        }>
            <SearchContent />
        </Suspense>
    );
}