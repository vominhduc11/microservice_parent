# Nginx Configuration for api.4thitek.vn (API Gateway)
#
# INSTALLATION:
# 1. Ensure shared-config.conf is in /etc/nginx/conf.d/
# 2. Copy this file to server: /etc/nginx/sites-available/api.4thitek.vn
# 3. Create symlink: sudo ln -s /etc/nginx/sites-available/api.4thitek.vn /etc/nginx/sites-enabled/
# 4. Test config: sudo nginx -t
# 5. Reload: sudo systemctl reload nginx
#
# SSL CERTIFICATES LOCATION:
# - Private Key:  /etc/ssl/api.4thitek.vn/private.key
# - Full Chain:   /etc/ssl/api.4thitek.vn/fullchain.crt
#
# NOTE: shared-config.conf is loaded from /etc/nginx/conf.d/ (auto-loaded by nginx)
# DO NOT include it here to avoid duplicate limit_req_zone definitions!

# ==============================================================================
# HTTP to HTTPS Redirect - API Gateway
# ==============================================================================
server {
    listen 80;
    listen [::]:80;
    server_name api.4thitek.vn;

    # Logs
    access_log /var/log/nginx/api.4thitek.vn-http-access.log;
    error_log /var/log/nginx/api.4thitek.vn-http-error.log;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

# ==============================================================================
# HTTPS - API Gateway
# Domain: api.4thitek.vn
# Backend: Spring Boot API Gateway on port 8080
# ==============================================================================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.4thitek.vn;

    # ==================== SSL Configuration ====================
    ssl_certificate /etc/ssl/api.4thitek.vn/fullchain.crt;
    ssl_certificate_key /etc/ssl/api.4thitek.vn/private.key;

    # SSL Session Settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:ApiSSL:10m;
    ssl_session_tickets off;

    # Modern SSL Configuration (TLS 1.2 and 1.3 only)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # ==================== Security Headers ====================
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # CORS headers (configure as needed for your frontends)
    add_header Access-Control-Allow-Origin "https://4thitek.vn https://admin.4thitek.vn https://dealer.4thitek.vn" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
    add_header Access-Control-Max-Age "3600" always;

    # ==================== Logs ====================
    access_log /var/log/nginx/api.4thitek.vn-access.log;
    error_log /var/log/nginx/api.4thitek.vn-error.log warn;

    # ==================== Client Settings ====================
    client_max_body_size 20M;
    client_body_buffer_size 128k;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # ==================== API Routes ====================
    # All API requests go to API Gateway
    location / {
        limit_req zone=api_limit burst=20 nodelay;

        # Handle CORS preflight (OPTIONS request)
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://4thitek.vn https://admin.4thitek.vn https://dealer.4thitek.vn" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
            add_header Access-Control-Max-Age "3600" always;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        proxy_pass http://api_backend/;
        proxy_http_version 1.1;

        # Proxy Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header Connection "";

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;

        # Disable caching for API responses
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }

    # ==================== API Documentation (Swagger) ====================
    # Uncomment to enable Swagger UI
    # WARNING: Secure this endpoint in production!

    # location /docs {
    #     proxy_pass http://api_backend/swagger-ui/index.html;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # location /swagger-ui/ {
    #     proxy_pass http://api_backend/swagger-ui/;
    #     proxy_set_header Host $host;
    # }

    # location /v3/api-docs {
    #     proxy_pass http://api_backend/v3/api-docs;
    #     proxy_set_header Host $host;
    # }

    # ==================== Health Check ====================
    location /actuator/health {
        proxy_pass http://api_backend/actuator/health;
        proxy_set_header Host $host;
        access_log off;
    }
}
