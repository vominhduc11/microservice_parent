# Nginx Configuration for ws.4thitek.vn (WebSocket Server)
#
# INSTALLATION:
# 1. Ensure shared-config.conf is in /etc/nginx/conf.d/
# 2. Copy this file to server: /etc/nginx/sites-available/ws.4thitek.vn
# 3. Create symlink: sudo ln -s /etc/nginx/sites-available/ws.4thitek.vn /etc/nginx/sites-enabled/
# 4. Test config: sudo nginx -t
# 5. Reload: sudo systemctl reload nginx
#
# SSL CERTIFICATES LOCATION:
# - Private Key:  /etc/ssl/ws.4thitek.vn/private.key
# - Full Chain:   /etc/ssl/ws.4thitek.vn/fullchain.crt
#
# NOTE: shared-config.conf is loaded from /etc/nginx/conf.d/ (auto-loaded by nginx)
# DO NOT include it here to avoid duplicate limit_req_zone definitions!

# ==============================================================================
# HTTP to HTTPS Redirect - WebSocket Server
# ==============================================================================
server {
    listen 80;
    listen [::]:80;
    server_name ws.4thitek.vn;

    # Logs
    access_log /var/log/nginx/ws.4thitek.vn-http-access.log;
    error_log /var/log/nginx/ws.4thitek.vn-http-error.log;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

# ==============================================================================
# HTTPS - WebSocket Server
# Domain: ws.4thitek.vn
# Backend: Notification Service with WebSocket on port 8087
# Protocol: WebSocket over SSL (WSS)
# ==============================================================================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ws.4thitek.vn;

    # ==================== SSL Configuration ====================
    ssl_certificate /etc/ssl/ws.4thitek.vn/fullchain.crt;
    ssl_certificate_key /etc/ssl/ws.4thitek.vn/private.key;

    # SSL Session Settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:WsSSL:10m;
    ssl_session_tickets off;

    # Modern SSL Configuration (TLS 1.2 and 1.3 only)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # ==================== Security Headers ====================
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # ==================== Logs ====================
    access_log /var/log/nginx/ws.4thitek.vn-access.log;
    error_log /var/log/nginx/ws.4thitek.vn-error.log warn;

    # ==================== WebSocket Endpoint ====================
    # Handles WebSocket connections with SockJS fallback
    location /ws {
        # Pass to notification service WebSocket endpoint
        proxy_pass http://notification_ws/ws;

        # HTTP version must be 1.1 for WebSocket
        proxy_http_version 1.1;

        # WebSocket specific headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Timeout settings for long-lived WebSocket connections
        # WebSocket connections can be open for days
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;

        # Disable buffering for WebSocket
        proxy_buffering off;

        # Allow large WebSocket messages
        proxy_buffer_size 4k;

        # Disable caching
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }

    # ==================== Health Check (Optional) ====================
    # Uncomment if notification-service has a health endpoint
    # location /actuator/health {
    #     proxy_pass http://notification_ws/actuator/health;
    #     proxy_set_header Host $host;
    #     access_log off;
    # }

    # ==================== Deny All Other Locations ====================
    # Only allow /ws endpoint for security
    location / {
        return 404;
    }
}
